{"ast":null,"code":"import _classCallCheck from \"/Users/nirosh/Developement/Udacity/ReactND/Module1/submission/work/myreads/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/nirosh/Developement/Udacity/ReactND/Module1/submission/work/myreads/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/nirosh/Developement/Udacity/ReactND/Module1/submission/work/myreads/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/nirosh/Developement/Udacity/ReactND/Module1/submission/work/myreads/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/nirosh/Developement/Udacity/ReactND/Module1/submission/work/myreads/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/nirosh/Developement/Udacity/ReactND/Module1/submission/work/myreads/src/App.js\";\nimport React from 'react';\nimport { Route, Link } from 'react-router-dom';\nimport './App.css';\nimport BookShelf from './BookShelf.js';\nimport SearchBooks from './SearchBooks.js';\nimport * as BooksAPI from './BooksAPI';\n/** @constructor This is the main class in the Books Application\n *  This application class holds available books loaded from external source\n *  and organized them in to three book shelfs depending on user 'read', 'want to read' or\n *  currently reading a particular books.\n */\n\nvar BooksApp =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BooksApp, _React$Component);\n\n  function BooksApp() {\n    var _this;\n\n    _classCallCheck(this, BooksApp);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BooksApp).call(this));\n    /**\n        This holds the application state\n    */\n\n    _this.state = {\n      /**\n       All books in the shelfs\n      */\n      books: []\n    };\n    return _this;\n  }\n  /**\n  * @description This function will place the selected book in the targeted book shelf\n  * @param shelf - targeted book shelf for the book\n  * @param book - the boook which shelf is changed\n  */\n\n\n  _createClass(BooksApp, [{\n    key: \"onShelfChanged\",\n    value: function onShelfChanged(shelf, book) {\n      book.shelf = shelf;\n      this.setState(function (state) {\n        return {\n          books: state.books.concat(book)\n        };\n      });\n    }\n    /**\n      @description lifecylce method called after when this component included into the DOM\n      Here we invoke the backend API to load the all the books\n    */\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      BooksAPI.getAll().then(function (allbooks) {\n        _this2.setState(function (state) {\n          return {\n            books: allbooks\n          };\n        });\n      });\n    }\n    /**\n     * @description renders the application\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        render: function render() {\n          return React.createElement(\"div\", {\n            className: \"app\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68\n            },\n            __self: this\n          }, React.createElement(BookShelf, {\n            shelfName: \"Currently Reading\",\n            onShelfChanged: _this3.onShelfChanged.bind(_this3),\n            books: _this3.state.books.filter(function (book) {\n              return book.shelf.valueOf() === 'currentlyReading';\n            }),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69\n            },\n            __self: this\n          }), React.createElement(BookShelf, {\n            shelfName: \"Want To Read\",\n            onShelfChanged: _this3.onShelfChanged.bind(_this3),\n            books: _this3.state.books.filter(function (book) {\n              return book.shelf.valueOf() === 'wantToRead';\n            }),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 74\n            },\n            __self: this\n          }), React.createElement(BookShelf, {\n            shelfName: \"Read\",\n            onShelfChanged: _this3.onShelfChanged.bind(_this3),\n            books: _this3.state.books.filter(function (book) {\n              return book.shelf.valueOf() === 'read';\n            }),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76\n            },\n            __self: this\n          }), React.createElement(\"div\", {\n            className: \"open-search\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78\n            },\n            __self: this\n          }, React.createElement(Link, {\n            className: \"open-search\",\n            to: \"/search\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79\n            },\n            __self: this\n          }, \"Add a book\")));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/search\",\n        render: function render() {\n          return React.createElement(\"div\", {\n            className: \"app\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85\n            },\n            __self: this\n          }, React.createElement(SearchBooks, {\n            shelfName: \"Available books\",\n            books: _this3.state.books,\n            onShelfChanged: _this3.onShelfChanged.bind(_this3),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return BooksApp;\n}(React.Component);\n\nexport default BooksApp;","map":{"version":3,"sources":["/Users/nirosh/Developement/Udacity/ReactND/Module1/submission/work/myreads/src/App.js"],"names":["React","Route","Link","BookShelf","SearchBooks","BooksAPI","BooksApp","state","books","shelf","book","setState","concat","getAll","then","allbooks","onShelfChanged","bind","filter","valueOf","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,IAAhB,QAA2B,kBAA3B;AAEA,OAAO,WAAP;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AAEA,OAAOC,WAAP,MAAwB,kBAAxB;AAEA,OAAO,KAAKC,QAAZ,MAA0B,YAA1B;AAEA;;;;;;IAKMC,Q;;;;;AAEF,sBAAa;AAAA;;AAAA;;AACT;AACA;;;;AAGA,UAAKC,KAAL,GAAa;AACT;;;AAGAC,MAAAA,KAAK,EAAE;AAJE,KAAb;AALS;AAYZ;AAGD;;;;;;;;;mCAKeC,K,EAAMC,I,EAAK;AACtBA,MAAAA,IAAI,CAACD,KAAL,GAAWA,KAAX;AAEA,WAAKE,QAAL,CAAc,UAACJ,KAAD;AAAA,eAAY;AACtBC,UAAAA,KAAK,EAAED,KAAK,CAACC,KAAN,CAAYI,MAAZ,CAAmBF,IAAnB;AADe,SAAZ;AAAA,OAAd;AAGH;AAED;;;;;;;wCAIoB;AAAA;;AAEhBL,MAAAA,QAAQ,CAACQ,MAAT,GAAkBC,IAAlB,CAAuB,UAACC,QAAD,EAAc;AACjC,QAAA,MAAI,CAACJ,QAAL,CAAc,UAACJ,KAAD;AAAA,iBAAY;AACtBC,YAAAA,KAAK,EAAEO;AADe,WAAZ;AAAA,SAAd;AAGH,OAJD;AAMH;AAED;;;;;;6BAGO;AAAA;;AACH,aAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,GAAlB;AAAsB,QAAA,MAAM,EAAE;AAAA,iBAC1B;AAAK,YAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI,oBAAC,SAAD;AAAW,YAAA,SAAS,EAAC,mBAArB;AAAyC,YAAA,cAAc,EAAE,MAAI,CAACC,cAAL,CAAoBC,IAApB,CAAyB,MAAzB,CAAzD;AACI,YAAA,KAAK,EACD,MAAI,CAACV,KAAL,CAAWC,KAAX,CAAiBU,MAAjB,CAAyB,UAACR,IAAD;AAAA,qBAASA,IAAI,CAACD,KAAL,CAAWU,OAAX,OAAyB,kBAAlC;AAAA,aAAzB,CAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAMI,oBAAC,SAAD;AAAW,YAAA,SAAS,EAAC,cAArB;AAAoC,YAAA,cAAc,EAAE,MAAI,CAACH,cAAL,CAAoBC,IAApB,CAAyB,MAAzB,CAApD;AAAoF,YAAA,KAAK,EAAE,MAAI,CAACV,KAAL,CAAWC,KAAX,CAAiBU,MAAjB,CAAyB,UAACR,IAAD;AAAA,qBAASA,IAAI,CAACD,KAAL,CAAWU,OAAX,OAAyB,YAAlC;AAAA,aAAzB,CAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,EAQI,oBAAC,SAAD;AAAW,YAAA,SAAS,EAAC,MAArB;AAA4B,YAAA,cAAc,EAAE,MAAI,CAACH,cAAL,CAAoBC,IAApB,CAAyB,MAAzB,CAA5C;AAA4E,YAAA,KAAK,EAAE,MAAI,CAACV,KAAL,CAAWC,KAAX,CAAiBU,MAAjB,CAAyB,UAACR,IAAD;AAAA,qBAAQA,IAAI,CAACD,KAAL,CAAWU,OAAX,OAAyB,MAAjC;AAAA,aAAzB,CAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ,EAUI;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI,oBAAC,IAAD;AAAM,YAAA,SAAS,EAAC,aAAhB;AAA8B,YAAA,EAAE,EAAC,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,CAVJ,CAD0B;AAAA,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAkBI,oBAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,SAAlB;AAA4B,QAAA,MAAM,EAAE;AAAA,iBAChC;AAAK,YAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI,oBAAC,WAAD;AAAa,YAAA,SAAS,EAAC,iBAAvB;AAAyC,YAAA,KAAK,EAAE,MAAI,CAACZ,KAAL,CAAWC,KAA3D;AAAkE,YAAA,cAAc,EAAE,MAAI,CAACQ,cAAL,CAAoBC,IAApB,CAAyB,MAAzB,CAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CADgC;AAAA,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAlBJ,CAFJ;AA4BH;;;;EA5EkBjB,KAAK,CAACoB,S;;AA8E7B,eAAed,QAAf","sourcesContent":["import React from 'react'\nimport { Route ,Link} from 'react-router-dom'\n\nimport './App.css'\nimport BookShelf from './BookShelf.js'\n\nimport SearchBooks from './SearchBooks.js'\n\nimport * as BooksAPI from './BooksAPI'\n\n/** @constructor This is the main class in the Books Application\n *  This application class holds available books loaded from external source\n *  and organized them in to three book shelfs depending on user 'read', 'want to read' or\n *  currently reading a particular books.\n */\nclass BooksApp extends React.Component {\n\n    constructor(){\n        super()\n        /**\n            This holds the application state\n        */\n        this.state = {\n            /**\n             All books in the shelfs\n            */\n            books: []\n        }\n\n    }\n\n\n    /**\n    * @description This function will place the selected book in the targeted book shelf\n    * @param shelf - targeted book shelf for the book\n    * @param book - the boook which shelf is changed\n    */\n    onShelfChanged(shelf,book){\n        book.shelf=shelf;\n\n        this.setState((state) => ({\n            books: state.books.concat(book)\n        }))\n    }\n\n    /**\n      @description lifecylce method called after when this component included into the DOM\n      Here we invoke the backend API to load the all the books\n    */\n    componentDidMount() {\n\n        BooksAPI.getAll().then((allbooks) => {\n            this.setState((state) => ({\n                books: allbooks\n            }))\n        })\n\n    }\n\n    /**\n     * @description renders the application\n     */\n   render(){\n        return (\n\n            <div>\n                <Route exact path='/' render={()=>(\n                    <div className=\"app\">\n                        <BookShelf shelfName=\"Currently Reading\" onShelfChanged={this.onShelfChanged.bind(this)}\n                            books={\n                                this.state.books.filter( (book)=> book.shelf.valueOf() === 'currentlyReading')\n                            }/>\n\n                        <BookShelf shelfName=\"Want To Read\" onShelfChanged={this.onShelfChanged.bind(this)} books={this.state.books.filter( (book)=> book.shelf.valueOf() === 'wantToRead')}/>\n\n                        <BookShelf shelfName=\"Read\" onShelfChanged={this.onShelfChanged.bind(this)} books={this.state.books.filter( (book)=>book.shelf.valueOf() === 'read')}/>\n\n                        <div className=\"open-search\">\n                            <Link className='open-search' to='/search'>Add a book</Link>\n                        </div>\n                    </div>\n                    )\n                }/>\n                <Route exact path='/search' render={()=>(\n                    <div className=\"app\">\n                        <SearchBooks shelfName=\"Available books\" books={this.state.books} onShelfChanged={this.onShelfChanged.bind(this)}/>\n                   </div>\n                    )\n                }/>\n            </div>\n        )\n    }\n}\nexport default BooksApp\n"]},"metadata":{},"sourceType":"module"}